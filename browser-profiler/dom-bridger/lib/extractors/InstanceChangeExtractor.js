"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseExtractor_1 = require("./BaseExtractor");
class InstanceChangeExtractor extends BaseExtractor_1.default {
}
exports.default = InstanceChangeExtractor;
InstanceChangeExtractor.definitePatterns = [
    'window.Date',
    'window.Math.random',
    'window.webkitMediaStream.new().id',
    'window.Document.new().lastModified',
    'window.navigator.connection.downlink',
    'window.performance.timeOrigin',
    'window.performance.memory.totalJSHeapSize',
    'window.performance.memory.usedJSHeapSize',
    'window.performance.timing.navigationStart',
    'window.performance.timing.fetchStart',
    'window.performance.timing.domainLookupStart',
    'window.performance.timing.domainLookupEnd',
    'window.performance.timing.connectStart',
    'window.performance.timing.connectEnd',
    'window.performance.timing.secureConnectionStart',
    'window.performance.timing.requestStart',
    'window.performance.timing.responseStart',
    'window.performance.timing.responseEnd',
    'window.performance.timing.domLoading',
    'window.performance.timing.domInteractive',
    'window.performance.timing.domContentLoadedEventStart',
    'window.performance.timing.domContentLoadedEventEnd',
    'window.performance.timing.domComplete',
    'window.performance.timing.loadEventStart',
    'window.performance.timing.loadEventEnd',
    'window.chrome.loadTimes',
    'window.chrome.csi',
    'window.Animation.new().ready.timeline.currentTime',
    'window.DocumentTimeline.new().currentTime',
    'window.navigator.hardwareConcurrency',
    'window.Animation.new().timeline.currentTime',
    'window.navigator.deviceMemory',
    'window.console.memory.jsHeapSizeLimit',
    'window.performance.memory.jsHeapSizeLimit',
    'window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable',
    'window.navigator.appVersion',
    'window.navigator.userAgent',
    'window.AudioContext.new().destination.context.sampleRate',
    'window.AudioContext.new().sampleRate',
    'window.navigator.connection.rtt',
    'window.navigation.currentEntry'
];
InstanceChangeExtractor.extraAddPatterns = [];
InstanceChangeExtractor.extraChangePatterns = [
    'window.console.memory.usedJSHeapSize',
    'window.BaseAudioContext.prototype.state',
    'window.BaseAudioContext.prototype.onstatechange',
    'window.AudioContext.new().destination.context.state',
    'window.AudioContext.new().destination.context.onstatechange',
    'window.AudioContext.new().state',
    'window.AudioContext.new().onstatechange',
    'window.document.readyState',
    'window.navigator.connection.onchange',
    'window.navigator.connection.effectiveType',
    'window.navigator.connection.saveData',
    'window.document.styleSheets',
    'window.document.scripts',
    'window.console.memory.jsHeapSizeLimit',
    'window.document.visibilityState',
    'window.document.webkitVisibilityState',
    'window.navigator.connection',
    'window.BarcodeDetector.getSupportedFormats',
    'window.BaseAudioContext.prototype.currentTime',
    'window.AudioContext.new().baseLatency',
    'window.AudioContext.new().destination.context.baseLatency',
    'window.AudioContext.new().destination.context.currentTime',
    'window.AudioContext.new().currentTime',
    'window.document.fonts.ready',
];
InstanceChangeExtractor.ignoredExtraPatterns = [];
InstanceChangeExtractor.regexps = [
    /AudioContext.new.+.baseLatency/,
    /AudioContext.+currentTime/,
    /AudioContext.*state/,
    /window.document.readyState/,
    /loadTimes.+wasNpnNegotiated/,
    /window.document.visibilityState/,
    /window.document.webkitVisibilityState/,
    /window.navigation.currentEntry.*/,
    /memory.usedJSHeapSize/,
    /navigator.connection.*/,
    /window.performance.timeOrigin/,
    /window.performance.memory.totalJSHeapSize/,
    /window.performance.timing.domainLookupStart/,
    /window.performance.timing.domainLookupEnd/,
    /window.performance.timing.(domContentLoadedEventStart|domContentLoadedEventEnd|domInteractive|secureConnectionStart|loadEventStart|loadEventEnd|domComplete|navigationStart|fetchStart|connectStart|connectEnd|requestStart|responseStart|responseEnd|domLoading)/,
    /window.performance.timing.(domContentLoadedEventStart|domContentLoadedEventEnd|domInteractive|secureConnectionStart|loadEventStart|loadEventEnd|domComplete|navigationStart|fetchStart|connectStart|connectEnd|requestStart|responseStart|responseEnd|domLoading)/,
    /window.navigator.hardwareConcurrency/,
    /window.Animation.new\(\).ready.timeline.currentTime/,
    /window.Animation.new\(\).timeline.currentTime/,
    /window.DocumentTimeline.new\(\).currentTime/,
    /window.Math.random/,
    /window.Date/,
    /window.chrome.csi/,
    /window.chrome.loadTimes/,
    /navigator.appVersion/,
    /navigator.userAgent/,
    /Document.new.+lastModified/,
    /window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable/,
    /window.AudioContext.new\(\).destination.context.sampleRate/,
    /window.AudioContext.new\(\).sampleRate/,
    /window.navigator.deviceMemory/,
    /window.console.memory.jsHeapSizeLimit/,
    /window.performance.memory.jsHeapSizeLimit/,
    /stack._\$value/,
    /window.document.styleSheets/,
    /window.document.scripts/,
    /window.document.fonts.ready/,
    /window.BarcodeDetector.getSupportedFormats/, // TODO: Add once we solve why BrowserStack is returning empty arrays on some OSes
];
//# sourceMappingURL=InstanceChangeExtractor.js.map